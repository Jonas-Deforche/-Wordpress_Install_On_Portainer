version: "3.4"

services:
  db:
    image: ${DB_IMAGE}:${DB_VERSION}
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_MYSQL_NAME}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
    networks:
      - default

  wordpress:
    depends_on:
      - db
    image: ${WP_IMAGE}:${WP_VERSION}
    volumes:
      - wordpress_data:/var/www/html
   # ports:
   #   - "8100:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${DB_MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_MYSQL_NAME}
    networks:
  #    - ${NETWORK_NAME}
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy-network"
      - "traefik.http.routers.wordpress-secure.entrypoints=websecure"
      - "traefik.http.routers.wordpress-secure.rule=Host(`${VIRTUAL_HOST}`)" 
      - "traefik.http.routers.wordpress-secure.service=wordpress"
      - "traefik.http.services.wordpress.loadbalancer.server.port=8100"

volumes:
  db_data:
    name: ${SITE_NAME}_db_data
  wordpress_data:
    name: ${SITE_NAME}_wordpress_data

# Connect to existing nginx-network: `docker network create nginx-network`#
#networks:
#  ${NETWORK_NAME}:
#    external:
#      name: ${NETWORK_NAME}
