version: "3.4"

services:
  db:
    image: ${DB_IMAGE}:${DB_VERSION}
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_MYSQL_NAME}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
    networks:
      - default

  wordpress:
    depends_on:
      - db
    image: ${WP_IMAGE}:${WP_VERSION}
#    build: ./wordpress
    volumes:
      - wordpress_data:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${DB_MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_MYSQL_NAME}
    networks:
      - traefik-proxy-network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy-network"
      - "traefik.http.routers.wordpress${SITE_NAME}-secure.entrypoints=websecure"
      - "traefik.http.routers.wordpress${SITE_NAME}-secure.rule=Host(`${LINK}`) || Host(`${LINK2}`)"
      - "traefik.http.routers.wordpress${SITE_NAME}-secure.service=wordpress${SITE_NAME}"
      - "traefik.http.services.wordpress${SITE_NAME}.loadbalancer.server.port=80"

volumes:
  db_data:
    name: ${SITE_NAME}_db_data
  wordpress_data:
    name: ${SITE_NAME}_wordpress_data

# Connect to existing nginx-network: `docker network create nginx-network`#
networks:
  traefik-proxy-network:
    external:
      name: traefik-proxy-network
